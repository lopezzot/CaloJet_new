#include <vector>
#include <iostream>

int calibration(){
	std::vector<double> calibscin(std::vector<double> vectorscin);
	std::vector<double> calibcher(std::vector<double> vectorcher);

	TFile* inputfile = TFile::Open("zjj.root");
	TTree* inputtree = (TTree*)inputfile->Get("B4");
	
	std::vector<double>* VectorScinR=0;
	std::vector<double>* VectorScinL=0;
	std::vector<double>* VectorCherR=0;
	std::vector<double>* VectorCherL=0;

	std::vector<double> Calib_VectorScinR;
	std::vector<double> Calib_VectorScinL;
	std::vector<double> Calib_VectorCherR;
	std::vector<double> Calib_VectorCherL;	

	inputtree->SetBranchAddress("VectorSignalsR",&VectorScinR);
	inputtree->SetBranchAddress("VectorSignalsL",&VectorScinL);
	inputtree->SetBranchAddress("VectorSignalsCherR",&VectorCherR);
	inputtree->SetBranchAddress("VectorSignalsCherL",&VectorCherL);
	
	//loop over events
	for (int event=0; event<5; event++){
		inputtree->GetEntry(event);

		Calib_VectorScinR = calibscin(*VectorScinR);
		Calib_VectorScinL = calibscin(*VectorScinL);
		Calib_VectorCherR = calibscin(*VectorCherR);
		Calib_VectorCherL = calibscin(*VectorCherL);
	}

	return 0;
}

std::vector<double> calibscin(std::vector<double> vectorscin){
	std::vector<double> s_cont;
	s_cont = {391.9964784225476, 392.65450934717455, 391.9130470386118, 390.6050630558208, 389.1126112802391, 387.95945028322916, 387.4823598282578, 388.1313680310084, 389.1887061971629, 389.39650703390834, 388.1539715075822, 388.50402528038387, 388.8469797524201, 389.5104813700643, 389.9263913577828, 389.03950145952115, 388.99508641977286, 388.772944352741, 389.1309191354679, 389.2350876534651, 389.13791528990845, 388.8450419930907, 389.1250633143002, 388.9702856267768, 388.89437597892635, 389.54155385650677, 389.6077230144546, 389.83471955121126, 388.9057586548166, 388.64729869880443, 389.63139958072384, 390.1488269998545, 388.91138544610874, 389.57905936367644, 389.4504769524226, 389.22625067001826, 389.79318503855836, 389.6127033215785, 389.1037017285112, 389.73580729121386, 389.31584083722316, 389.40881680859326, 389.323138549745, 389.2451419219243, 389.3922639055792, 388.796221854985, 388.97157341770327, 388.99869472269773, 389.07910256875385, 389.31098859776864, 388.7419881503485, 388.3143923895009, 389.0092636036939, 388.229773876986, 388.3854174264933, 388.05911875263905, 387.2643574001875, 387.3554637363693, 387.39402352923776, 387.02865949856425, 386.9609406993706, 386.7226638865326, 386.7789454376136, 386.7732373979207, 385.4992193760886, 385.5215522567318, 384.82993023752476, 384.24706703575663, 384.2926857786712, 383.6152585260428, 382.8533589897697, 384.67220539781823, 383.42475883749, 382.5620400263505, 376.3078422852331};
	
	int loop1 = s_cont.size();
	int loop2 = 36;

	for(int b=1; b<loop2; b++){
		for(int i=0; i<loop1; i++){
			s_cont.push_back(s_cont[i]);
		}
	}

	double c = 0.1;
	s_cont.insert(s_cont.begin(),c);

	if(s_cont.size() != vectorscin.size()){cout<<"ERROR in calibration!"<<endl;}

	std::vector<double> Calib_vectorScin;

	for(int i=0; i<vectorscin.size(); i++){
		Calib_vectorScin.push_back(vectorscin[i]*(1.0/s_cont[i]));
	}

	return Calib_vectorScin;
}

std::vector<double> calibcher(std::vector<double> vectorcher){
	std::vector<double> c_cont;
	c_cont = {99.869475119436, 99.5892930698953, 99.36819945465197, 99.32851833492266, 99.23212488346117, 99.21702593539936, 99.03028402205433, 99.15912908522857, 99.2060316999247, 99.30522580785956, 99.11344505994408, 99.21283817184117, 99.25155522412936, 99.29526075724375, 99.32726514547564, 99.21535433745935, 99.24785175107958, 99.2500389422396, 99.2947777840262, 99.20923521702923, 99.30797870907622, 99.31656510767378, 99.21947678681387, 99.32713686590662, 99.32851884709454, 99.305911407397, 99.30508949248147, 99.34913871640343, 99.19261358390726, 99.16893956672706, 99.26948077177317, 99.31331547462389, 99.30086159029355, 99.37873056276479, 99.35080907470335, 99.42847084872328, 99.40510235111934, 99.30670688191663, 99.38448289299362, 99.43075203396795, 99.34555944179634, 99.38032213687576, 99.3653611014606, 99.33974923759105, 99.36938995243544, 99.41133031804752, 99.33192563010871, 99.18049429253469, 99.39705625808192, 99.24849638998961, 99.2286007870197, 99.09928229987484, 99.0993256503711, 99.19364178823666, 99.0555902591915, 99.0621809829577, 98.97675936409205, 99.13401462382535, 99.03520349760886, 99.01410173081639, 98.805439062685, 98.8931348280415, 98.84927421673683, 98.71812808136468, 98.76605765544863, 98.8150716743538, 98.664618195543, 98.52979814367153, 98.39802169218106, 98.48346797819356, 98.46914717338315, 98.21105203135059, 98.38198816987828, 98.04422762750505, 96.54297571859878};

	int loop1 = c_cont.size();
	int loop2 = 36;

	for(int b=1; b<loop2; b++){
		for(int i=0; i<loop1; i++){
			c_cont.push_back(c_cont[i]);
		}
	}

	double c = 0.1;
	c_cont.insert(c_cont.begin(),c);

	if(c_cont.size() != vectorcher.size()){cout<<"ERROR in calibration!"<<endl;}

	std::vector<double> Calib_vectorCher;

	for(int i=0; i<vectorcher.size(); i++){
		Calib_vectorCher.push_back(vectorcher[i]*(1.0/c_cont[i]));
	}

	return Calib_vectorCher;
}

